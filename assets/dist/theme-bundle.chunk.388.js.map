{"version":3,"file":"theme-bundle.chunk.388.js","mappings":"8SAGsE,IAEjDA,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,K,UAAAF,G,EAAAD,G,sEAAA,IAAAI,EAAAJ,EAAAK,UAoEzB,OApEyBD,EAC1BE,QAAA,WACIC,KAAKC,gCACLD,KAAKE,YACT,EAACL,EAEDI,8BAAA,WACI,IAAME,EAAe,0BACfC,GAAqBC,EAAAA,EAAAA,GAAI,CAC3BC,OAAWH,EAAY,wBACvBI,IAAKC,EAAAA,KAEHC,EAAeC,EAAEP,GAEvBC,EAAmBO,IAAI,CACnB,CACIC,SAAaT,EAAY,+BACzBU,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAMC,MAAMF,GAG/B,EACAG,aAAclB,KAAKmB,QAAQC,cAE/B,CACIR,SAAaT,EAAY,qCACzBU,SAAU,SAACC,EAAIC,GAGXD,EAFeE,EAAAA,EAAMK,SAASN,GAGlC,EACAG,aAAclB,KAAKmB,QAAQG,mBAInCb,EAAac,GAAG,UAAU,SAAAC,GACtBpB,EAAmBqB,eAEfrB,EAAmBsB,OAAO,UAI9BF,EAAMG,gBACV,GACJ,EAAC9B,EAEDK,WAAA,WACIQ,EAAE,mCAAmCa,GAAG,SAAS,SAAAC,GAC7CA,EAAMG,iBAEN,IAAIC,EAASlB,EAAEc,EAAMK,eAErBnB,EAAE,mCAAmCoB,IAAIF,GAAQG,YAAY,aAE1DH,EAAOI,SAAS,aACfJ,EAAOG,YAAY,aAEnBH,EAAOK,SAAS,aAGpBvB,EAAE,4BAA4BwB,MAAK,SAACC,EAAOC,GACpC1B,EAAE,SAAU0B,GAASJ,SAAS,aAC7BtB,EAAE0B,GAASC,KAAK,aAAaC,UAAU,QAEvC5B,EAAE0B,GAASC,KAAK,aAAaE,QAAQ,OAE7C,GACJ,GACJ,EAAC9C,CAAA,CApEyB,CAAS+C,EAAAA,E","sources":["webpack://Halo/./assets/js/theme/contact-us.js"],"sourcesContent":["import PageManager from './page-manager';\nimport nod from './common/nod';\nimport forms from './common/models/forms';\nimport { announceInputErrorMessage } from './common/utils/form-utils';\n\nexport default class ContactUs extends PageManager {\n    onReady() {\n        this.registerContactFormValidation();\n        this.faqsToggle();\n    }\n\n    registerContactFormValidation() {\n        const formSelector = 'form[data-contact-form]';\n        const contactUsValidator = nod({\n            submit: `${formSelector} input[type=\"submit\"]`,\n            tap: announceInputErrorMessage,\n        });\n        const $contactForm = $(formSelector);\n\n        contactUsValidator.add([\n            {\n                selector: `${formSelector} input[name=\"contact_email\"]`,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactEmail,\n            },\n            {\n                selector: `${formSelector} textarea[name=\"contact_question\"]`,\n                validate: (cb, val) => {\n                    const result = forms.notEmpty(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.contactQuestion,\n            },\n        ]);\n\n        $contactForm.on('submit', event => {\n            contactUsValidator.performCheck();\n\n            if (contactUsValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    faqsToggle() {\n        $('.halo-faqs-content .card .title').on('click', event => {\n            event.preventDefault();\n\n            var target = $(event.currentTarget);\n\n            $('.halo-faqs-content .card .title').not(target).removeClass('collapsed');\n\n            if(target.hasClass('collapsed')){\n                target.removeClass('collapsed');\n            } else{\n                target.addClass('collapsed');\n            }\n\n            $('.halo-faqs-content .card').each((index, element) => {\n                if($('.title', element).hasClass('collapsed')){\n                    $(element).find('.collapse').slideDown(\"slow\");\n                } else{\n                    $(element).find('.collapse').slideUp(\"slow\");\n                }\n            });\n        });\n    }\n}\n"],"names":["ContactUs","_PageManager","apply","arguments","_proto","prototype","onReady","this","registerContactFormValidation","faqsToggle","formSelector","contactUsValidator","nod","submit","tap","announceInputErrorMessage","$contactForm","$","add","selector","validate","cb","val","forms","email","errorMessage","context","contactEmail","notEmpty","contactQuestion","on","event","performCheck","areAll","preventDefault","target","currentTarget","not","removeClass","hasClass","addClass","each","index","element","find","slideDown","slideUp","PageManager"],"sourceRoot":""}